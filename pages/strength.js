import React, { useState, useEffect } from "react";
import Head from "next/head";
import {
  Form,
  Button,
  Select,
  DatePicker,
  Spin,
  Row,
  Col,
  Checkbox,
} from "antd";
import "antd/dist/antd.css";
import Sidebar from "../components/Sidebar";
import anychart from "anychart";
import axios from "axios";

export default function Strength() {
  const [loading, setLoading] = useState(false);
  const [dateRange, setDateRange] = useState([]);
  const [chartsData, setChartsData] = useState([
    ["2021-04-01 00:00:00", 4, -18, -102, -22, 12, 83, -2, 45],
    ["2021-04-01 00:15:00", 30, 61, -39, -35, 1, -12, 32, -38],
    ["2021-04-01 00:30:00", -26, -104, -33, -37, 42, 197, -79, 40],
    ["2021-04-01 00:45:00", -12, -11, 79, -36, -8, 26, -21, -17],
    ["2021-04-01 01:00:00", 48, 77, 7, 2, -22, -91, -2, -19],
    ["2021-04-01 01:15:00", -49, 25, 53, 3, -9, 55, -39, -39],
    ["2021-04-01 01:30:00", 42, 80, 47, -13, 4, 5, -75, -90],
    ["2021-04-01 01:45:00", -42, 29, 62, 43, -62, 45, -71, -4],
    ["2021-04-01 02:00:00", -42, 29, 62, 43, -62, 45, -71, -4],
    ["2021-04-01 02:15:00", 89, 78, -28, -93, 136, -37, -35, -110],
    ["2021-04-01 02:30:00", 20, 62, -57, 78, -69, 17, 4, -55],
    ["2021-04-01 02:45:00", -62, 42, 66, 42, -51, -64, 11, 16],
    ["2021-04-01 03:00:00", 4, 21, 16, 34, -4, -30, -35, -6],
    ["2021-04-01 03:15:00", -18, -16, -26, 7, 14, 35, 40, -36],
    ["2021-04-01 03:30:00", -26, 11, 9, 92, -27, 3, -51, -11],
    ["2021-04-01 03:45:00", 20, -102, 20, -43, -15, 98, 53, -31],
    ["2021-04-01 04:00:00", -12, -97, -19, -103, 29, 113, 51, 38],
    ["2021-04-01 04:15:00", -18, 47, 25, 28, 37, 40, -111, -48],
    ["2021-04-01 04:30:00", 41, 30, -17, -18, -24, 34, 12, -58],
    ["2021-04-01 04:45:00", 16, -17, -30, -43, 4, 34, 26, 10],
    ["2021-04-01 05:00:00", -15, -26, 8, 25, 25, -6, 8, -19],
  ]);

  const { Option } = Select;
  const { RangePicker } = DatePicker;

  function onChangeDate(value, dateString) {
    setDateRange(dateString);
  }
  function onChangeCurrency(e) {
    console.log(e.target.value);
  }

  const onFinish = (values) => {
    var dateFrom = "";
    var dateTo = "";
    if (dateRange.length > 0) {
      console.log(dateRange[0]);
      dateFrom = dateRange[0];
      dateTo = dateRange[1];
    }
    setLoading(true);
    const formData = {
      timeframe: values.timeframe,
      to: dateTo,
      from: dateFrom,
    };
    //return false;
    axios({
      method: "post",
      headers: { "Content-Type": "application/json" },
      url: `${process.env.API_URL}strength_data`,
      data: formData,
    })
      .then((res) => {
        var analogData = res.data.data["analog"];
        var digitalData = res.data.data["digital"];
        // ============= Chart Configuration ==========
        var offset = new Date().getTimezoneOffset();
        anychart.format.outputTimezone(offset);
        analogChart(analogData);
        // digitalChart(digitalData);
        // ============= Chart Configuration ==========

        setLoading(false);
      })
      .catch(function (error) {
        console.log(error);
        setLoading(false);
      });
  };
  // =========== Analog Chart Start ==============
  const analogChart = (analogData) => {
    var dataSetM15 = anychart.data.set(chartsData);

    var firstSeriesDataM15 = dataSetM15.mapAs({ x: 0, value: 1 });

    var chart = anychart.line();
    chart.animation(true);
    // turn on the crosshair
    chart.crosshair().enabled(true).yLabel(false).yStroke(null);
    // set tooltip mode to point
    chart.tooltip().positionMode("point");

    chart.xAxis().labels().padding(0).rotation(90);

    // create first series with mapped data

    var firstSeriesM15 = chart.line(firstSeriesDataM15);
    firstSeriesM15.name("M15(EUR)");
    firstSeriesM15.hovered().markers().enabled(true).type("circle").size(4);
    firstSeriesM15.tooltip().position("right").anchor("left-center");

    // create second series with mapped data

    // turn the legend on
    chart.legend().enabled(true).fontSize(13).padding([0, 0, 10, 0]);

    // set container id for the chart
    const myNode = document.getElementById("analogContainer");
    myNode.innerHTML = "";
    chart.container("analogContainer");
    // initiate chart drawing
    chart.draw();
  };
  // =========== Analog Chart End ================

  return (
    <div>
      <Head>
        <title>Luccrostrength</title>
        <meta name="Luccrostrength" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://cdn.anychart.com/releases/8.3.0/css/anychart-ui.min.css"
        />
      </Head>

      <main className="dashboard">
        <Sidebar />
        <div className="main-content">
          <div className="white-box">
            <Form
              name="horizontal_login"
              layout="inline"
              initialValues={{
                timeframe: "M15",
              }}
              onFinish={onFinish}
            >
              <Form.Item label="Time Frames" name="timeframe">
                <Select style={{ width: "100px" }}>
                  <Option value="M15">M15</Option>
                  <Option value="M30">M30</Option>
                  <Option value="M60">M60</Option>
                  <Option value="M240">M240</Option>
                  <Option value="M1440">M1440</Option>
                </Select>
              </Form.Item>
              <Form.Item label="Date" name="date">
                <RangePicker
                  showTime
                  onChange={onChangeDate}
                  style={{ width: "300px" }}
                />
              </Form.Item>
              <Form.Item>
                <Button type="primary" htmlType="submit">
                  Submit
                </Button>
              </Form.Item>
            </Form>
          </div>
          <Spin tip="Loading..." spinning={loading}>
            <Row gutter={16}>
              <Col span={24}>
                <div className="white-box">
                  <div className="filters">
                    <h2>Analog</h2>
                    <div className="currency-checkboxes">
                      <b>Currency: &nbsp;&nbsp;</b>
                      <Checkbox onChange={onChangeCurrency} value="EUR">
                        EUR
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="GBP">
                        GBP
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="JPY">
                        JPY
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="USD">
                        USD
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="CHF">
                        CHF
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="CAD">
                        CAD
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="AUD">
                        AUD
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="NZD">
                        NZD
                      </Checkbox>
                    </div>
                    <div className="currency-checkboxes">
                      <b>Timeframe: &nbsp;&nbsp;</b>
                      <Checkbox>M15</Checkbox>
                      <Checkbox>M30</Checkbox>
                      <Checkbox>M60</Checkbox>
                      <Checkbox>M240</Checkbox>
                    </div>
                  </div>

                  <div id="analogContainer" className="half-container"></div>
                </div>
              </Col>
              <Col span={24}>
                <div className="white-box">
                  <div className="filters">
                    <h2>Digital</h2>
                    <div className="currency-checkboxes">
                      <b>Currency: &nbsp;&nbsp;</b>
                      <Checkbox onChange={onChangeCurrency} value="EUR">
                        EUR
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="GBP">
                        GBP
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="JPY">
                        JPY
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="USD">
                        USD
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="CHF">
                        CHF
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="CAD">
                        CAD
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="AUD">
                        AUD
                      </Checkbox>
                      <Checkbox onChange={onChangeCurrency} value="NZD">
                        NZD
                      </Checkbox>
                    </div>
                    <div className="currency-checkboxes">
                      <b>Timeframe: &nbsp;&nbsp;</b>
                      <Checkbox>M15</Checkbox>
                      <Checkbox>M30</Checkbox>
                      <Checkbox>M60</Checkbox>
                      <Checkbox>M240</Checkbox>
                    </div>
                  </div>

                  <div id="analogContainer" className="half-container"></div>
                </div>
              </Col>
            </Row>
          </Spin>
        </div>
      </main>
    </div>
  );
}
